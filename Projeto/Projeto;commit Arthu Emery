import os
os.system("cls")
def salvar_dados(biblioteca):
    with open("dados.txt", "w") as file:
        for livro in biblioteca:
            file.write(f"{livro['nome']};{livro['autor']};{livro['categoria']};{livro['preco']}\n")

def carregar_dados():
    biblioteca = []
    try:
        with open("dados.txt", "r") as file:
            for line in file:
                nome, autor, categoria, preco = line.strip().split(";")
                biblioteca.append({'nome': nome, 'autor': autor, 'categoria': categoria, 'preco': float(preco)})
    except FileNotFoundError:
        pass
    return biblioteca

def mostrar_menu():
    print("\nMenu:")
    print("1. Adicionar livro")
    print("2. Visualizar livros")
    print("3. Atualizar livro")
    print("4. Excluir livro")
    print("5. Visualizar livros por categoria")
    print("6. Extrato da biblioteca por categoria")
    print("7. Total gasto em livros")
    print("8. Recomendar livro baseado em categorias populares")
    print("9. Sair")
    escolha = int(input("Escolha uma opção: "))
    return escolha

def adicionar_livro(biblioteca, gastos):
    nome = input("Nome do livro: ")
    autor = input("Autor: ")
    categoria = input("Categoria: ")
    preco = float(input("Preço: "))
    biblioteca.append({'nome': nome, 'autor': autor, 'categoria': categoria, 'preco': preco})
    gastos[0] += preco
    print("Livro adicionado com sucesso.")
    salvar_dados(biblioteca)

def visualizar_livros(biblioteca):
  if not biblioteca:
      print("Nenhuma livro cadastrado.")
      return
  for livro in biblioteca:
      print(f"Nome: {livro['nome']}, Autor: {livro['autor']}, Categoria: {livro['categoria']}, Preço: {livro['preco']}")

def atualizar_livro(biblioteca):
  nome = input("Nome do livro a ser atualizado: ")
  for livro in biblioteca:
      if livro['nome'] == nome:
          livro['autor'] = input("Novo autor: ")
          livro['categoria'] = input("Nova categoria: ")
          livro['preco'] = float(input("Novo preço: "))
          print("Livro atualizado com sucesso.")
          salvar_dados(biblioteca)
          return
  print("Livro não encontrado.")

def excluir_livro(biblioteca, gastos):
    nome = input("Nome do livro a ser excluído: ")
    for i, livro in enumerate(biblioteca):
        if livro['nome'] == nome:
            gastos[0] -= livro['preco']
            del biblioteca[i]
            print("Livro excluído com sucesso.")
            salvar_dados(biblioteca)
            return
    print("Livro não encontrado.")

def visualizar_por_categoria(biblioteca):
    categoria = input("Digite a categoria: ")
    livros_categoria = [livro for livro in biblioteca if livro['categoria'] == categoria]
    if not livros_categoria:
        print("Nenhum livro encontrado nessa categoria.")
        return
    for livro in livros_categoria:
        print(f"Nome: {livro['nome']}, Autor: {livro['autor']}, Categoria: {livro['categoria']}, Preço: {livro['preco']}")

def extrato_por_categoria(biblioteca):
    categorias = {}
    for livro in biblioteca:
        if livro['categoria'] in categorias:
            categorias[livro['categoria']].append(livro['nome'])
        else:
            categorias[livro['categoria']] = [livro['nome']]
    for categoria, livros in categorias.items():
        print(f"Categoria: {categoria}, Livros: {', '.join(livros)}")

def total_gasto(gastos):
    print(f"Total gasto em livros: R$ {gastos[0]}")

def recomendar_livro(biblioteca):
    if not biblioteca:
        print("Ainda não há livros suficientes para recomendações.")
        return
    categorias = {}
    for livro in biblioteca:
        categorias[livro['categoria']] = categorias.get(livro['categoria'], 0) + 1
    categoria_popular = max(categorias, key=categorias.get)
    print(f"Baseado nas suas preferências, você pode gostar de mais livros na categoria '{categoria_popular}'.")

def main():
    biblioteca = carregar_dados()
    gastos = [sum(livro['preco'] for livro in biblioteca)]

    while True:
        escolha = mostrar_menu()

        if escolha == 1:
            adicionar_livro(biblioteca, gastos)
        elif escolha == 2:
            visualizar_livros(biblioteca)
        elif escolha == 3:
            atualizar_livro(biblioteca)
        elif escolha == 4:
            excluir_livro(biblioteca, gastos)
        elif escolha == 5:
            visualizar_por_categoria(biblioteca)
        elif escolha == 6:
            extrato_por_categoria(biblioteca)
        elif escolha == 7:
            total_gasto(gastos)
        elif escolha == 8:
            recomendar_livro(biblioteca)
        elif escolha == 9:
            break
        else:
            print("Opção inválida. Tente novamente.")

if __name__ == "__main__":
    main()
